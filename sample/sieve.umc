/**
 * @file sieve.umc
 * @author Jasper Geer
 * @brief Sample program that uses the Sieve of Erasthones algorithm to find
 *        all primes up to and including a user-provided value.
 * @copyright Copyright (c) 2022 Jasper Geer
 * Licensed under the MIT license.
 */

// REQUIRES stdlib.umc

int main() {
    char num_str[11];

    puts("Enter the desired limit (max 2999): ");
    gets(num_str, 11);

    int num = stoi(num_str);
    int prime[3000];

    int i = 0;
    while (i < 3000) {
        prime[i] = 1;
        i = i + 1;
    }

    int p = 2;
    while (p * p <= num) {
        if (prime[p]) {
            int i = p;
            while (i <= num) {
                prime[i] = 0;
                i = i + p;
            }
        }
        p = p + 1;
    }

    puts("The prime numbers up to ");
    printInt(num);
    puts(" are:\n");
    p = 1;
    while (p <= num) {
        if (prime[p]) {
            printInt(p);
            puts("\n");
        }
        p = p + 1;
    }
    return 0;
}

int printInt(int i) {
    char str[11];
    str[10] = '\0';
    char *curr = str + 9;

    while (i > 0) {
        *curr = i % 10 + 48;
        i = i / 10;
        curr = curr - 1;
    }
    puts(curr + 1);
    return 0;
}